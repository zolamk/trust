input boolean_expression {
  """Equals value"""
  _eq: Boolean

  """Is value null (true) or not null (false)"""
  _is_null: Boolean

  """Does not equal value"""
  _neq: Boolean
}

input time_expression {
  """Equals value"""
  _eq: String

  """Does not equal value"""
  _neq: String

  """Is greater than value"""
  _gt: String

  """Is greater than or equals value"""
  _gte: String

  """Is value null (true) or not null (false)"""
  _is_null: Boolean

  """Is lesser than value"""
  _lt: String

  """Is lesser than or equals value"""
  _lte: String
}

input int_expression {
  """Equals value"""
  _eq: Int

  """Does not equal value"""
  _neq: Int

  """Is greater than value"""
  _gt: Int

  """Is greater than or equals value"""
  _gte: Int

  """Is value null (true) or not null (false)"""
  _is_null: Boolean

  """Is lesser than value"""
  _lt: Int

  """Is lesser than or equals value"""
  _lte: Int
}

input float_expression {
  """Equals value"""
  _eq: Float

  """Does not equal value"""
  _neq: Float

  """Is greater than value"""
  _gt: Float

  """Is greater than or equals value"""
  _gte: Float

  """Is value null (true) or not null (false)"""
  _is_null: Boolean

  """Is lesser than value"""
  _lt: Float

  """Is lesser than or equals value"""
  _lte: Float
}

input string_expression {
  """Equals value"""
  _eq: String

  """Does not equal value"""
  _neq: String

  """Is greater than value"""
  _gt: String

  """Is greater than or equals value"""
  _gte: String

  """
  Value matching pattern where '%' represents zero or more characters and '_' represents a single character. Eg. '_r%' finds values having 'r' in second position
  """
  _like: String

  """
  Value matching (case-insensitive) pattern where '%' represents zero or more characters and '_' represents a single character. Eg. '_r%' finds values having 'r' in second position
  """
  _ilike: String

  """
  Value not matching pattern where '%' represents zero or more characters and '_' represents a single character. Eg. '_r%' finds values not having 'r' in second position
  """
  _nlike: String

  """
  Value not matching (case-insensitive) pattern where '%' represents zero or more characters and '_' represents a single character. Eg. '_r%' finds values not having 'r' in second position
  """
  _nilike: String

  """Is value null (true) or not null (false)"""
  _is_null: Boolean

  """Is lesser than value"""
  _lt: String

  """Is lesser than or equals value"""
  _lte: String
}

input users_bool_exp {
  _or: [users_bool_exp!]
  id: string_expression
  email: string_expression
  phone: string_expression
  name: string_expression
  avatar: string_expression
  email_confirmed: boolean_expression
  email_confirmation_token_sent_at: time_expression
  email_confirmed_at: time_expression
  phone_confirmed: boolean_expression
  phone_confirmation_token_sent_at: time_expression
  phone_confirmed_at: time_expression
  recovery_token_sent_at: time_expression
  email_change_token_sent_at: time_expression
  phone_change_token_sent_at: time_expression
  last_signin_at: time_expression
  created_at: time_expression
  updated_at: time_expression
  invitation_token_sent_at: time_expression
  invitation_accepted_at: time_expression
  new_email: string_expression
  new_phone: string_expression
  phone_changed_at: time_expression
  email_changed_at: time_expression
  password_changed_at: time_expression
  incorrect_login_attempts: int_expression
  last_incorrect_login_attempt_at: time_expression
}