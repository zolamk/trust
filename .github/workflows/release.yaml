on:
  release:
    types: [created]

name: Release

jobs:

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, macos-latest, windows-latest]
        go: [1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Test
        run: go test -cover ./...

  release:
    name: Release Go Binary
    needs: test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["amd64", "arm64", "386"]
        exclude:
          - goarch: arm64
            goos: windows
          - goarch: "386"
            goos: darwin
    steps:
      - uses: actions/checkout@v2
      
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.17
          binary_name: trust
          executable_compression: upx
          ldflags: -s -w
        env:
          CGO_ENABLED: 0