// Code generated by "stringer -type=ParserType,FieldType -output=./gen_string.go"; DO NOT EDIT.

package graph

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[parserError-0]
	_ = x[parserEOF-1]
	_ = x[OpQuery-2]
	_ = x[OpMutate-3]
	_ = x[OpSub-4]
	_ = x[NodeStr-5]
	_ = x[NodeNum-6]
	_ = x[NodeBool-7]
	_ = x[NodeObj-8]
	_ = x[NodeList-9]
	_ = x[NodeVar-10]
}

const _ParserType_name = "parserErrorparserEOFOpQueryOpMutateOpSubNodeStrNodeNumNodeBoolNodeObjNodeListNodeVar"

var _ParserType_index = [...]uint8{0, 11, 20, 27, 35, 40, 47, 54, 62, 69, 77, 84}

func (i ParserType) String() string {
	if i < 0 || i >= ParserType(len(_ParserType_index)-1) {
		return "ParserType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ParserType_name[_ParserType_index[i]:_ParserType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FieldUnion-1]
	_ = x[FieldMember-2]
	_ = x[FieldKeyword-3]
}

const _FieldType_name = "FieldUnionFieldMemberFieldKeyword"

var _FieldType_index = [...]uint8{0, 10, 21, 33}

func (i FieldType) String() string {
	i -= 1
	if i < 0 || i >= FieldType(len(_FieldType_index)-1) {
		return "FieldType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FieldType_name[_FieldType_index[i]:_FieldType_index[i+1]]
}
